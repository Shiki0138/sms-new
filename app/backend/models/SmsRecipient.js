/**
 * SMS Recipient Model for Campaign Recipients
 */
class SmsRecipient {
  constructor(data = {}) {\n    this.id = data.id;\n    this.campaignId = data.campaignId;\n    this.customerId = data.customerId;\n    this.phoneNumber = data.phoneNumber;\n    this.status = data.status || 'pending'; // pending, sent, delivered, failed, opted_out\n    this.messageId = data.messageId || null; // Twilio message SID\n    this.sentAt = data.sentAt || null;\n    this.deliveredAt = data.deliveredAt || null;\n    this.failedAt = data.failedAt || null;\n    this.errorMessage = data.errorMessage || null;\n    this.clickedAt = data.clickedAt || null;\n    this.optedOutAt = data.optedOutAt || null;\n    this.personalizedContent = data.personalizedContent || '';\n    this.metadata = data.metadata || {};\n    this.createdAt = data.createdAt || new Date();\n    this.updatedAt = data.updatedAt || new Date();\n  }\n\n  // Validation\n  validate() {\n    const errors = [];\n\n    if (!this.campaignId) {\n      errors.push('Campaign ID is required');\n    }\n\n    if (!this.customerId) {\n      errors.push('Customer ID is required');\n    }\n\n    if (!this.phoneNumber || this.phoneNumber.trim().length === 0) {\n      errors.push('Phone number is required');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n\n  // Status management\n  updateStatus(newStatus, metadata = {}) {\n    this.status = newStatus;\n    this.updatedAt = new Date();\n\n    switch (newStatus) {\n      case 'sent':\n        this.sentAt = metadata.sentAt || new Date();\n        this.messageId = metadata.messageId;\n        break;\n      case 'delivered':\n        this.deliveredAt = metadata.deliveredAt || new Date();\n        break;\n      case 'failed':\n        this.failedAt = metadata.failedAt || new Date();\n        this.errorMessage = metadata.errorMessage;\n        break;\n      case 'clicked':\n        this.clickedAt = metadata.clickedAt || new Date();\n        break;\n      case 'opted_out':\n        this.optedOutAt = metadata.optedOutAt || new Date();\n        break;\n    }\n  }\n\n  // Check if delivery was successful\n  isDelivered() {\n    return this.status === 'delivered';\n  }\n\n  // Check if delivery failed\n  isFailed() {\n    return this.status === 'failed';\n  }\n\n  // Check if customer opted out\n  isOptedOut() {\n    return this.status === 'opted_out';\n  }\n\n  // Check if customer clicked (if tracking is enabled)\n  hasClicked() {\n    return this.clickedAt !== null;\n  }\n\n  // Get delivery duration (sent to delivered)\n  getDeliveryDuration() {\n    if (this.sentAt && this.deliveredAt) {\n      return this.deliveredAt - this.sentAt;\n    }\n    return null;\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      campaignId: this.campaignId,\n      customerId: this.customerId,\n      phoneNumber: this.phoneNumber,\n      status: this.status,\n      messageId: this.messageId,\n      sentAt: this.sentAt,\n      deliveredAt: this.deliveredAt,\n      failedAt: this.failedAt,\n      errorMessage: this.errorMessage,\n      clickedAt: this.clickedAt,\n      optedOutAt: this.optedOutAt,\n      personalizedContent: this.personalizedContent,\n      metadata: this.metadata,\n      createdAt: this.createdAt,\n      updatedAt: this.updatedAt\n    };\n  }\n\n  static fromJSON(data) {\n    return new SmsRecipient(data);\n  }\n}\n\nmodule.exports = SmsRecipient;